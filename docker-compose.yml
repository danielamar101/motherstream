services:
  # motherstream:
  #   depends_on:
  #   - jaeger
  #   - postgres
  #   - oryx
  #   container_name: motherstream
  #   build:
  #     context: .  
  #     dockerfile: Dockerfile 
  #   # ports:
  #   #   - 8483:8483
  #   network_mode: host
  #   env_file: .env
  #   dns:
  #     - 100.100.100.100  # Tailscale DNS server
  #     - 8.8.8.8          # Fallback DNS
  #   dns_search:
  #     - tail16f377.ts.net
  #   extra_hosts:
  #     - "macbook-pro:100.108.225.64"  # Backup in case DNS fails
  #   volumes:
  #     - ./stream-recordings:/var/www/streams/stream-recordings
  #   restart: unless-stopped

  # frontend:
  #   container_name: frontend
  #   network_mode: host
  #   build:
  #     context: ./frontend  
  #     dockerfile: Dockerfile 
  #   env_file: frontend/.env
  #   restart: unless-stopped
  #   # ports:
    #   - 5173:5173

  # nginx-rtmp:
    # network_mode: host
    # container_name: nginx
    # restart: unless-stopped
    # build:
    #   context: ./nginx-config
    #   dockerfile: Dockerfile
    # volumes: 
    #   - ./nginx-config/nginx.conf:/etc/nginx/nginx.conf
    #   - ./nginx-config/rtmp.conf:/etc/nginx/rtmp.conf
    #   - ./nginx-config/https-config.conf:/etc/nginx/conf.d/https-config.conf
    #   - ./nginx-config/stat.xsl:/var/www/stat.xsl
    #   - ./stream-recordings:/var/www/streams/stream-recordings
    #   - ./certs/:/etc/letsencrypt/
    #   - ./certbot/www/:/var/www/certbot/
    # ports:
    #   - 1936:1936
  oryx:
    # network_mode: host
    container_name: oryx
    # depends_on:
    #   - nginx-rtmp
    image: ossrs/oryx:5.15.20
    ports:
      - 2022:2022
    #   - 1935:1935
    #   - 8080:8080
    #   - 8000:8000/udp
    #   - 10800:10800/udp
    volumes:
      - ./oryx/:/data
    restart: unless-stopped
  # jaeger:
  #   container_name: jaeger
  #   restart: unless-stopped
  #   image: jaegertracing/all-in-one:latest
  #   environment:
  #     - COLLECTOR_ZIPKIN_HOST_PORT=:9411
  #   ports:
  #     - "16686:16686"
  #     - "4317:4317" 
  #     - "9411:9411"
  
  # postgres:
  #   network_mode: host
  #   image: postgres:15.12
  #   container_name: postgres
  #   env_file:
  #     - .env
  #   environment:
  #     POSTGRES_DB: ${DB_NAME}
  #     POSTGRES_PASSWORD: ${DB_PASSWORD}
  #     POSTGRES_USER: ${DB_USER}
  #   volumes:
  #     - ./pgdata/data:/var/lib/postgresql/data
  #     - ./pgdata/initdb:/docker-entrypoint-initdb.d