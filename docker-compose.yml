version: '3.8'

services:
  # motherstream:
  #   container_name: motherstream
  #   build:
  #     context: .  # Use the current directory as build context
  #     dockerfile: Dockerfile  # Specify the Dockerfile (if it's named differently, change it here)
  #   network_mode: host  # Use host networking mode
  #   env_file: .env
  #     # Add as many environment variables as needed
  #   # volumes:
  #   #   - .:/app  # Mount current directory to /app inside container
  #   restart: unless-stopped

  # frontend:
  #   container_name: frontend
  #   build:
  #     context: ./frontend  # Use the current directory as build context
  #     dockerfile: Dockerfile  # Specify the Dockerfile (if it's named differently, change it here)
  #   network_mode: host  # Use host networking mode
  #   env_file: frontend/.env
  #     # Add as many environment variables as needed
  #   restart: unless-stopped

  nginx-rtmp:
    container_name: nginx
    network_mode: host
    restart: unless-stopped
    build:
      context: ./nginx-config
      dockerfile: Dockerfile
    volumes: 
      - ./nginx-config/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx-config/rtmp.conf:/etc/nginx/rtmp.conf
      - ./nginx-config/https-config.conf:/etc/nginx/conf.d/https-config.conf
      - ./certs/:/etc/letsencrypt/
      - ./certbot/www/:/var/www/certbot/:ro
      # - /var/www:/var/www
  oryx:
    container_name: oryx
    network_mode: host
    image: ossrs/oryx:5.15.20
    # ports:
    #   - 2022:2022
    #   - 443:2443
    #   - 1937:1935
    #   - 8080:8080
    #   - 8000:8000/udp
    #   - 10800:10800/udp
    volumes:
      - /home/danielamar/Desktop/onyx:/data
    restart: unless-stopped
  # certbot:
  #   image: certbot/certbot:latest
  #   volumes:
  #     - ./certbot/www/:/var/www/certbot/:rw
  #     - ./certs/:/etc/letsencrypt/:rw