# Staging nginx configuration for host system
# This runs on the host machine to route staging.motherstream.live to minikube
#
# ARCHITECTURE:
# - Host nginx (this config): HTTP proxy + HTTPS TCP passthrough
# - Kubernetes ingress: Handles SSL termination with cert-manager certificates
# - cert-manager: Automatically obtains and renews Let's Encrypt certificates
#
# FLOW:
# HTTP:  Internet:80 → Host nginx:80 (HTTP proxy) → Minikube Ingress:31741 → Pods
# HTTPS: Internet:443 → Host nginx:443 (TCP stream) → Minikube Ingress:32763 (SSL termination) → Pods
#
# NOTE: This config only handles HTTP. HTTPS passthrough requires nginx stream module.
#       For HTTPS to work, you need to either:
#       A) Configure router to forward 443 directly to 192.168.49.2:32763, OR
#       B) Add stream configuration (requires nginx compiled with --with-stream)

server {
    listen 80;
    server_name staging.motherstream.live;
    server_tokens off;

    # Access logging for staging
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Route ALL HTTP traffic to minikube ingress controller
    # This includes:
    # - ACME challenges (/.well-known/acme-challenge/) for cert-manager
    # - Regular HTTP traffic
    # - Redirects to HTTPS (handled by Kubernetes ingress)
    location / {
        proxy_pass http://192.168.49.2:30880;
        proxy_http_version 1.1;
        
        # Forward original request information
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $http_host;
        
        # WebSocket support
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # Timeouts and buffering
        proxy_connect_timeout 60s;
        proxy_read_timeout 60s;
        proxy_send_timeout 60s;
        proxy_buffering off;
        
        # Handle redirects properly
        proxy_redirect off;
    }
}
